name: Release

on:
  push:
    tags:
      '*'

env:
  BUILD_TYPE: Release

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2.2.0

    - name: Dump GitHub context
      env:
        GITHUB_CONTEXT: ${{ toJson(github) }}
      run: echo "$GITHUB_CONTEXT"

    - name: Create Build Environment
      run: cmake -E make_directory ${{github.workspace}}/build

    - name: Configure CMake
      shell: bash
      working-directory: ${{github.workspace}}/build
      run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE

    - name: Build binaries
      working-directory: ${{github.workspace}}/build
      shell: bash
      run: cmake --build . --config $BUILD_TYPE

    - name: Test
      working-directory: ${{github.workspace}}/build
      shell: bash
      run: ctest -C $BUILD_TYPE

    - name: Package distributions
      working-directory: ${{github.workspace}}/build
      shell: bash
      run: cpack --verbose && ls -ltr

    - name: Check release type
      id: check-tag
      run: |
        if [[ ${{ github.event.ref }} =~ ^refs/tags/v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo ::set-output name=prerelease::false
        else
            echo ::set-output name=prerelease::true
        fi

    - name: Get previous release tag
      id: get_previous_release
      uses: oprypin/find-latest-tag@v1
      with:
        repository: https://github.com/jmspit/leanux.git
        releases-only: true
        regex: '^v\d+\.\d+\.\d+$'

    - name: Get release changelog
      id: get_release_changelog
      if: steps.check-tag.outputs.prerelease == 'false'
      run:
        export CHANGELOG="$(git --no-pager log ${{ steps.get_previous_release.outputs.tag }}..HEAD --first-parent --merges --date=short --pretty=format:'  - %h %cd %an %t %s')"
        CHANGELOG="${CHANGELOG//'%'/'%25'}"
        CHANGELOG="${CHANGELOG//$'\n'/'%0A'}"
        CHANGELOG="${CHANGELOG//$'\r'/'%0D'}"
        echo "::set-output name=changelog::$(echo "$CHANGELOG")"

    - name: Get pre-release changelog
      id: get_prerelease_changelog
      if: steps.check-tag.outputs.prerelease == 'true'
      run:
        export CHANGELOG="$(git --no-pager log ${{ steps.get_previous_release.outputs.tag }}..HEAD --date=short --pretty=format:'  - %h %cd %an %t %s')"
        CHANGELOG="${CHANGELOG//'%'/'%25'}"
        CHANGELOG="${CHANGELOG//$'\n'/'%0A'}"
        CHANGELOG="${CHANGELOG//$'\r'/'%0D'}"
        echo "::set-output name=changelog::$(echo "$CHANGELOG")"

    - name: Create release
      id: create_release
      if: steps.check-tag.outputs.prerelease == 'false'
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body: |
          Release ${{ github.ref }}

          Changes since ${{ steps.get_previous_release.outputs.tag }}:

          $${steps.get_release_changelog.outputs.changelog}
        draft: false
        prerelease: false

    - name: Create pre-release
      id: create_pre_release
      if: steps.check-tag.outputs.prerelease == 'true'
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body: |
          Release ${{ github.ref }}

          Changes since ${{ steps.get_previous_release.outputs.tag }}:

          $${steps.get_prerelease_changelog.outputs.changelog}
        draft: false
        prerelease: true

    - name: Delete draft releases
      uses: hugo19941994/delete-draft-releases@v0.1.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload release binaries
      uses: alexellis/upload-assets@0.2.2
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        asset_paths: '["${{github.workspace}}/build/*.deb","${{github.workspace}}/build/*.ebuild","${{github.workspace}}/build/*.PKGBUILD"]'

